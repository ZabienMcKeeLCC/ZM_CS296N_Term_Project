@model ZM_CS296N_TermProject.Models.DomainModels.Review

@{
    ViewData["Title"] = "Details";
}

@using Microsoft.AspNetCore.Identity
@using ZM_CS296N_TermProject.Models.DomainModels;

@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager
<h2 class="m-2">@Model.Title</h2>
Posted By:
<a asp-controller="Account" asp-action="AccountDetails" asp-route-id="@Model.User.Id"> @Model.User.UserName </a>
<div class="jumbotron">

    @for (int i = 0; i < Model.Rating; i++)
    {
    <a>⭐</a>
    }
    <br /><br /><p>@Model.Message</p>

    <p class="text-sm-right">Posted At: @Model.Date</p>



</div>

@if (User.IsInRole("Banned"))
    {
@Html.DisplayText("You're Banned!");
    }
    else if (signInManager.IsSignedIn(User))
    {

<a asp-action="WriteReply" asp-route-id="@Model.ReviewId"><img src="\Images\CommentButton.png" alt="Write a reply" class="image-class" /></a>
    }

@if (Model.GetComments().Count > 0)
{
<h3>Replies</h3>
    foreach (ZM_CS296N_TermProject.Models.DomainModels.Comment comment in (List<ZM_CS296N_TermProject.Models.DomainModels.Comment>)Model.GetComments())
    {
<div class="comment">
    <a asp-controller="Account" asp-action="AccountDetails" asp-route-id="@comment.Commenter.Id"> @comment.Commenter.UserName </a><br />
    @comment.Message
    <div class="text-sm-right"> Posted At: @comment.Date</div>
</div>

<br />
    }
}
<div>
    @if (signInManager.IsSignedIn(User))
    {
    @if (User.IsInRole("Admin") || userManager.GetUserAsync(User).Result.Id == Model.User.Id)
        {
    <a asp-action="Edit" asp-route-id="@Model.ReviewId">Edit</a><br />
    <a asp-action="Index">Back to List</a>
        }
    }
</div>
